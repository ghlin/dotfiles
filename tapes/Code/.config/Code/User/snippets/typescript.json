{
	/*
	// Place your snippets for TypeScript here. Each snippet is defined under a snippet name and has a prefix, body and
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
	// same ids are connected.
	// Example:
	"Print to console": {
		"prefix": "log",
		"body": [
			"console.log('$1');",
			"$2"
		],
		"description": "Log output to console"
	}
*/
	"Nest Service": {
		"prefix": "nest:service",
		"body": [
			"import { Component, Logger } from '@nestjs/common';",
			"import { InjectRepository } from '@nestjs/typeorm';",
			"import { Repository } from 'typeorm';",
			"",
			"@Component()",
			"export class $1Service {",
			"  private readonly logger = new Logger('$1Service');",
			"  constructor(",
			"    @InjectRepository($1)",
			"    private readonly articleRepository: Repository<$2>,",
			"  ) { }",
			"",
			"}"
		]
	},

	"Msg_* Handler": {
		"prefix": "handl",
		"body": [
			"@handles()",
			"$1 = (ctx: HandlerContext<Message>) => {",
			"  return ctx.snapshot;",
			"}"
		]
	}
}
